<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sinjinsong.eshop.dao.message.ProductTransactionMessageDOMapper">

    <resultMap id="BaseResultMap" type="cn.sinjinsong.eshop.common.domain.entity.message.ProducerTransactionMessageDO">
        <id column="msgId" property="id" ></id>
        <result column="message_status" property="messageStatus" javaType="cn.sinjinsong.eshop.common.enumeration.message.MessageStatus"></result>
        <result column="update_time" property="updateTime" javaType="java.time.LocalDateTime"></result>
        <result column="create_time" property="createTime" javaType="java.time.LocalDateTime"></result>
        <result column="send_times" property="sendTimes"></result>
        <result column="topic" property="topic"></result>
    </resultMap>
    
    <resultMap id="ResultMapWithBLOBs"
               type="cn.sinjinsong.eshop.common.domain.entity.message.ProducerTransactionMessageDO">
        <constructor>
            <idArg column="msgId" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="message_status" javaType="cn.sinjinsong.eshop.common.enumeration.message.MessageStatus"
                 jdbcType="SMALLINT"/>
            <arg column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
            <arg column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
            <arg column="send_times" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="topic" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="body" javaType="_byte[]" jdbcType="LONGVARBINARY"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        msgId, message_status, update_time, create_time, send_times, topic
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        body
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from producer_transaction_message
        where msgId = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from producer_transaction_message
        where msgId = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="cn.sinjinsong.eshop.common.domain.entity.message.ProducerTransactionMessageDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into producer_transaction_message (msgId, message_status, update_time,
        create_time, send_times, topic,
        body)
        values (#{id,jdbcType=BIGINT}, #{messageStatus,jdbcType=SMALLINT}, #{updateTime,jdbcType=TIMESTAMP},
        #{createTime,jdbcType=TIMESTAMP}, #{sendTimes,jdbcType=INTEGER}, #{topic,jdbcType=VARCHAR},
        #{body,jdbcType=LONGVARBINARY})
    </insert>
    <update id="updateByPrimaryKeySelective"
            parameterType="cn.sinjinsong.eshop.common.domain.entity.message.ProducerTransactionMessageDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update producer_transaction_message
        <set>
            <if test="messageStatus != null">
                message_status = #{messageStatus,jdbcType=SMALLINT},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sendTimes != null">
                send_times = #{sendTimes,jdbcType=INTEGER},
            </if>
            <if test="topic != null">
                topic = #{topic,jdbcType=VARCHAR},
            </if>
            <if test="body != null">
                body = #{body,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where msgId = #{id,jdbcType=BIGINT}
    </update>

    <select id="findMessageIdsByStatusCreatedAfter" resultType="long">
        select msgId
        from producer_transaction_message
        where TIMESTAMPDIFF(MINUTE ,create_time,now()) >= #{gap}
        and message_status in
        <foreach item="status" collection="statuses" open="(" separator="," close=")">
            #{status.code}
        </foreach>
    </select>

    <select id="selectBatchByPrimaryKeys" resultMap="ResultMapWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from producer_transaction_message
        where
        <if test="ids != null and ids.size > 0">
            msgId IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="ids == null or ids.size == 0">1=0</if>
    </select>

    
    <select id="findByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from producer_transaction_message
        <where>
            <if test="condition.id != null">
                msgId = #{condition.id}
            </if>
            <if test="condition.status != null">
                and message_status = #{condition.status.code} 
            </if>
            <if test="condition.topic != null">
                and topic = #{condition.topic} 
            </if>
        </where>
        order by create_time desc
    </select>
    
    
</mapper>